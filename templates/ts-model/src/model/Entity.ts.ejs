<% 
const imports = {};

table.columns.forEach((column, idx) => {
	if (column.type.startsWith('relation') 
		&& column.relation.camelName !== table.camelName
		&& !imports[column.relation.camelName]
	) {
		imports[column.relation.camelName] = true;
%>
import { <%= column.relation.camelName %> } from './<%= column.relation.camelName %>';<% 
	}
});
%>

export interface <%= table.camelName %> {
<% 
table.columns.forEach((column, idx) => { 
	if (column.type.startsWith('primary')) { 
%>
	// <%= column.caption %>
	<%= column.lowerCamelName %>: <%= column.tsType %>;
<%
	}
}); 
%>
<% 
table.columns.forEach((column, idx) => { 
	if (!column.type.startsWith('relation') 
		&& !column.type.startsWith('primary')
	) { // NORMAL Columns
%>
	// <%= column.caption %>
	<%= column.lowerCamelName %>: <%= column.tsType %>;
<%	
	}
}); 
%>
<% 
table.columns.forEach((column, idx) => { 
	if (column.type.startsWith('relation.one')) { 
%>
	// <%= column.caption %>
	<%= column.relName %>: <%= column.relation.camelName %>;
<%
	}
}); 
%>
<% 
table.columns.forEach((column, idx) => {
	if (column.type.startsWith('relation.many')) {
%>
	// TODO: Need to handle with function - getter? Default projection not serialize this!
	<%= column.lowerCamelName %>: <%= column.relation.camelName %>[] = [];
<% 
	}
});
%>
}
