package <%= options.package %>.controller

import <%= options.package %>.service.<%= table.camelName %>Filter
import <%= options.package %>.service.<%= table.camelName %>FilterService
import <%= options.package %>.service.<%= table.camelName %>XlsService
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.data.domain.Pageable
import org.springframework.stereotype.Controller
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RequestMethod
import java.io.OutputStream
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import javax.servlet.http.HttpServletResponse
import javax.servlet.http.HttpSession
/*FOXB-IMPORT*/
/*FOXE-IMPORT*/

@Controller
class <%= table.camelName %>XlsController(
/*FOXB-INIT*/
/*FOXE-INIT*/
	@Autowired val filterService: <%= table.camelName %>FilterService,
    @Autowired val xlsService: <%= table.camelName %>XlsService
) {
    @RequestMapping(
        value = ["/app/<%= table.pluralLowerCamelName %>/xlsx"],
        method = [RequestMethod.GET],
        produces = ["application/octet-stream"]
    )
    fun xlsx(
        filter: <%= table.camelName %>Filter,
        pageable: Pageable,
        session: HttpSession,
        resp: HttpServletResponse,
        out: OutputStream
    ) {
        val specifications = filterService.createSpecifications(filter, session)
        val now = DateTimeFormatter.ofPattern("yyyy-MM-dd-HHmmss").format(LocalDateTime.now())
        val fileName = "<%= table.camelName %>-export-${now}.xlsx"

        resp.addHeader("Content-Disposition", "attachment; filename=\"${fileName}\"")

        xlsService.generate(specifications!!, pageable, out)
    }
}
