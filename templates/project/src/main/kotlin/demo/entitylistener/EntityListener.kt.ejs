package <%= options.package %>.entitylistener

import <%= options.package %>.domain.<%= table.camelName %>
import org.slf4j.LoggerFactory
import javax.persistence.*
/*FOXB-IMPORT*/
/*FOXE-IMPORT*/

class <%= table.camelName %>EntityListener(
/*FOXB-CARG*/
/*FOXE-CARG*/
) {
    private val log = LoggerFactory.getLogger(<%= table.camelName %>EntityListener::class.java)

    fun preSave(type: String, entity: <%= table.camelName %>) {
/*FOXB-PRE*/
/*FOXE-PRE*/
    }

    fun postSave(type: String, entity: <%= table.camelName %>) {
/*FOXB-POST*/
/*FOXE-POST*/
    }

    @PrePersist
    fun prePersist(entity: <%= table.camelName %>) {
        preSave("insert", entity);
    }
    @PreUpdate
    fun preUpdate(entity: <%= table.camelName %>) {
        preSave("update", entity);
    }
    @PreRemove
    fun preRemove(entity: <%= table.camelName %>) {
        preSave("delete", entity);
    }

    @PostPersist
    fun postPersist(entity: <%= table.camelName %>) {
        postSave("insert", entity);
    }
    @PostUpdate
    fun postUpdate(entity: <%= table.camelName %>) {
        postSave("update", entity);
    }
    @PostRemove
    fun postRemove(entity: <%= table.camelName %>) {
        postSave("delete", entity);
    }
}