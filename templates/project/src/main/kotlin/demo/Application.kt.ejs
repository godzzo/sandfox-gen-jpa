package <%= package %>

import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.builder.SpringApplicationBuilder
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer<% 
if ( hints.includes('envers') ) { %>
import org.springframework.data.envers.repository.support.EnversRevisionRepositoryFactoryBean
import org.springframework.data.jpa.repository.config.EnableJpaAuditing
import org.springframework.data.jpa.repository.config.EnableJpaRepositories<% } %>
import org.springframework.boot.runApplication
import org.slf4j.LoggerFactory

@SpringBootApplication<% 
if ( hints.includes('envers') ) {
%>
@EnableJpaAuditing
@EnableJpaRepositories(repositoryFactoryBeanClass = EnversRevisionRepositoryFactoryBean::class)
<%
}
%>
class Application : SpringBootServletInitializer() {
	override fun configure(application: SpringApplicationBuilder): SpringApplicationBuilder {
		println(">>>>> Application - configure - Called :)")
		log.info(">>>>> Application - configure - Called :)")

		return application.sources(Application::class.java)
	}
}

private val log = LoggerFactory.getLogger(Application::class.java)

fun main(args: Array<String>) {
	println(">>>>> Application - main - Called :)")
	log.info(">>>>> Application - main - Called :)")

	runApplication<Application>(*args)
}
