package <%= options.package %>.filter

import org.slf4j.LoggerFactory
import org.springframework.core.annotation.Order
import org.springframework.stereotype.Component
import java.io.IOException
import jakarta.servlet.*
import jakarta.servlet.http.HttpServletRequest
import jakarta.servlet.http.HttpServletResponse
/*FOXB-IMPORT*/
/*FOXE-IMPORT*/

@Component
@Order(1)
class ApiFilter : Filter {
    @Throws(ServletException::class)
    override fun init(filterConfig: FilterConfig) {
        LOG.info("Initializing filter :{}", this)
    }

/*FOXB-BODY*/
/*FOXE-BODY*/

    @Throws(IOException::class, ServletException::class)
    override fun doFilter(request: ServletRequest, response: ServletResponse, chain: FilterChain) {
        val req = request as HttpServletRequest
        val res = response as HttpServletResponse
		val uri = req.requestURI
		var approved = true

/*FOXB-FILTER*/
/*FOXE-FILTER*/

		LOG.info("Logging Request  {} : {}", req.method, req.requestURI)

		if (approved) {
			chain.doFilter(request, response)
		}

        LOG.info("Logging Response :{}", res.contentType)
    }

    override fun destroy() {
        LOG.warn("Destructing filter :{}", this)
    }

    companion object {
        private val LOG = LoggerFactory.getLogger(ApiFilter::class.java)
    }
}
